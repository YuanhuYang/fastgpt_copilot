version: '3.8'

# FastGPT 生产环境 Docker Compose 配置
# 包含更多安全和性能优化

services:
  # 反向代理 (Nginx)
  nginx:
    image: nginx:alpine
    container_name: fastgpt-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - fastgpt
    networks:
      - fastgpt-network

  # MongoDB 数据库集群
  mongodb-primary:
    image: mongo:5.0.18
    container_name: fastgpt-mongodb-primary
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-fastgpt123}
      MONGO_INITDB_DATABASE: fastgpt
    volumes:
      - mongodb_primary_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongodb/mongod.conf:/etc/mongod.conf:ro
    command: mongod --config /etc/mongod.conf
    networks:
      - fastgpt-network

  # Redis 集群 (主节点)
  redis-master:
    image: redis:7.0.11-alpine
    container_name: fastgpt-redis-master
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-fastgpt123}
    volumes:
      - redis_master_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - fastgpt-network

  # PostgreSQL 向量数据库
  postgres:
    image: ankane/pgvector:v0.5.0
    container_name: fastgpt-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fastgpt
      POSTGRES_USER: fastgpt
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fastgpt123}
      POSTGRES_MAX_CONNECTIONS: 200
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - fastgpt-network

  # FastGPT 主应用
  fastgpt:
    image: ghcr.io/labring/fastgpt:latest
    container_name: fastgpt-app
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - mongodb-primary
      - redis-master
      - postgres
    environment:
      # 数据库连接
      MONGODB_URI: mongodb://root:${MONGODB_ROOT_PASSWORD:-fastgpt123}@mongodb-primary:27017/fastgpt?authSource=admin
      REDIS_URL: redis://redis-master:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-fastgpt123}
      PG_URL: postgresql://fastgpt:${POSTGRES_PASSWORD:-fastgpt123}@postgres:5432/fastgpt
      
      # 应用配置
      PORT: 3000
      NODE_ENV: production
      
      # 安全配置
      TOKEN_KEY: ${TOKEN_KEY}
      ROOT_KEY: ${ROOT_KEY}
      FILE_TOKEN_SECRET: ${FILE_TOKEN_SECRET}
      
      # GitHub Copilot API
      OPENAI_BASE_URL: https://api.githubcopilot.com
      CHAT_API_KEY: ${GITHUB_COPILOT_API_KEY}
      
      # 模型配置
      DEFAULT_MODEL: gpt-4
      OPENAI_MODELS: |
        [
          {
            "model": "gpt-4",
            "name": "GPT-4",
            "maxToken": 8000,
            "price": 0.03,
            "maxResponse": 4000,
            "censor": false,
            "defaultSystemChatPrompt": "你是一个有用的AI助手。"
          },
          {
            "model": "gpt-3.5-turbo",
            "name": "GPT-3.5-Turbo",
            "maxToken": 4000,
            "price": 0.002,
            "maxResponse": 2000,
            "censor": false,
            "defaultSystemChatPrompt": "你是一个有用的AI助手。"
          }
        ]
      
      # 性能优化
      MAX_FILE_SIZE: 100
      UPLOAD_CHUNK_SIZE: 1024
      DB_MAX_CONN: 10
      
      # 功能开关
      ALLOW_REGISTER: ${ALLOW_REGISTER:-true}
      ENABLE_CACHE: true
      CACHE_TTL: 3600
      
      # 监控配置
      ENABLE_METRICS: true
      METRICS_PORT: 9090
      
    volumes:
      - fastgpt_data:/app/data
      - fastgpt_logs:/app/logs
      - ./config:/app/data/config:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - fastgpt-network

  # 监控服务 (Prometheus)
  prometheus:
    image: prom/prometheus:latest
    container_name: fastgpt-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - fastgpt-network

  # 可视化监控 (Grafana)
  grafana:
    image: grafana/grafana:latest
    container_name: fastgpt-grafana
    restart: always
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - fastgpt-network

  # 日志收集 (ELK Stack - Elasticsearch)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: fastgpt-elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - fastgpt-network

  # 日志可视化 (Kibana)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: fastgpt-kibana
    restart: always
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - fastgpt-network

volumes:
  mongodb_primary_data:
  redis_master_data:
  postgres_data:
  fastgpt_data:
  fastgpt_logs:
  nginx_logs:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

networks:
  fastgpt-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
