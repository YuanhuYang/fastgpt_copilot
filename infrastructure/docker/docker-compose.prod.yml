version: '3.8'

# 生产环境配置 - 优化性能和安全性
networks:
  fastgpt-copilot-prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/16

services:
  # MongoDB数据库 - 生产版
  mongo:
    image: mongo:5.0.18
    container_name: fastgpt-mongo-prod
    restart: always
    networks:
      fastgpt-copilot-prod:
        ipv4_address: 172.31.0.2
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - /data/mongo:/data/db
      - ./backups:/backups
    command: mongod --wiredTigerCacheSizeGB 4 --auth --bind_ip_all
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # PostgreSQL数据库 - 生产版
  pg:
    image: ankane/pgvector:v0.5.0
    container_name: fastgpt-pg-prod
    restart: always
    networks:
      fastgpt-copilot-prod:
        ipv4_address: 172.31.0.3
    environment:
      - POSTGRES_USER=${PG_USERNAME}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - /data/pg:/var/lib/postgresql/data
      - ./backups:/backups
    command: postgres -c shared_preload_libraries=vector -c max_connections=200
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # FastGPT主服务 - 生产版
  fastgpt:
    image: ghcr.io/labring/fastgpt:v4.8.1
    container_name: fastgpt-prod
    restart: always
    networks:
      fastgpt-copilot-prod:
        ipv4_address: 172.31.0.4
    environment:
      - DEFAULT_ROOT_PSW=${FASTGPT_ROOT_PASSWORD}
      - OPENAI_BASE_URL=http://172.31.0.5:8888
      - CHAT_API_KEY=${CHAT_API_KEY}
      - DB_MAX_LINK=50
      - TOKEN_KEY=${TOKEN_KEY}
      - ROOT_KEY=${ROOT_KEY}
      - FILE_TOKEN_KEY=${FILE_TOKEN_KEY}
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@172.31.0.2:27017/fastgpt?authSource=admin
      - PG_URL=postgresql://${PG_USERNAME}:${PG_PASSWORD}@172.31.0.3:5432/${PG_DATABASE}
    depends_on:
      - mongo
      - pg
      - copilot-proxy
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # GitHub Copilot代理服务 - 生产版
  copilot-proxy:
    build:
      context: ../../services/copilot-proxy
      dockerfile: Dockerfile
    container_name: copilot-proxy-prod
    restart: always
    networks:
      fastgpt-copilot-prod:
        ipv4_address: 172.31.0.5
    environment:
      - PORT=8888
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://172.31.0.4:3000}
      - LOG_LEVEL=warn
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Nginx反向代理 - 生产版
  nginx:
    image: nginx:alpine
    container_name: fastgpt-nginx-prod
    restart: always
    networks:
      fastgpt-copilot-prod:
        ipv4_address: 172.31.0.6
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../infrastructure/nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - fastgpt
      - copilot-proxy
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
